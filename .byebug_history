c
learc
exit
readers
readers.find_or_create_by(name: name.strip)
readers
name
exit
note.readers == [users(:alice), users(:beth)]
note.visible_to = 'alice, beth'
assert note.readers == [users(:alice), users(:beth)]
note.readers
note.visible_to = 'alice, beth'
note
c
test.compact
test
exit
test.compact
test
c
test
c
test
c
test
c
@note
exit
c
exit
note.visible_to
note.readers
note.readers << user
user = User.find(session[:user_id])
note = Note.create(notes_params)
exit
note.readers << user
session
user = User.find(session[:user_id])
note = Note.create(notes_params)
c
params
notes_params
c
notes_params
c
notes_params
params
c
params
notes_params
c
exit
session[:user_id]
exit
session[:user_id]
session
params
notes_params
song_params
c
exit
current_user
notes_params
c
notes_params
c
notes_params
c
notes_params
c
notes_params
c
notes_params
exit
Note.last
exit
Note.all
note.user
note.content
note.readers
exit
reader_names.join(', ')
reader_names.join(',')
reader_names = readers.collect {|reader| reader.name}
reader_names = readers.collect (|reader| reader.name)
readersreader_names = readers.collect (|reader| reader.name)
readers.all
readers
readers.join(',')
exit
readers
exit
self.save
save
readers.build(name: name)
readers.create(name: name)
readers
exit
    end
      readers.create(name: 'name')
array_of_names.each do |name|
readers.new
readers
names.split(', ')
name.split(", ")
names.split
names
c
cc
user
exit
note
note.readers
[alice]
alice
exit
learn
user.posts
user
Post.all
user.posts
user.post
post
user.admin?
user
exit
self
session
note.user == current_user
note.user
note
c
@note = Note.new
